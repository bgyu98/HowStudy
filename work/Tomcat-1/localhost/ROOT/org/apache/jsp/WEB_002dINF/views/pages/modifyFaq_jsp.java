/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/10.1.4
 * Generated at: 2023-01-27 08:14:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views.pages;

import jakarta.servlet.*;
import jakarta.servlet.http.*;
import jakarta.servlet.jsp.*;

public final class modifyFaq_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports,
                 org.apache.jasper.runtime.JspSourceDirectives {

  private static final jakarta.servlet.jsp.JspFactory _jspxFactory =
          jakarta.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("jakarta.servlet");
    _jspx_imports_packages.add("jakarta.servlet.http");
    _jspx_imports_packages.add("jakarta.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile jakarta.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public boolean getErrorOnELNotFound() {
    return false;
  }

  public jakarta.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final jakarta.servlet.http.HttpServletRequest request, final jakarta.servlet.http.HttpServletResponse response)
      throws java.io.IOException, jakarta.servlet.ServletException {

    if (!jakarta.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final jakarta.servlet.jsp.PageContext pageContext;
    jakarta.servlet.http.HttpSession session = null;
    final jakarta.servlet.ServletContext application;
    final jakarta.servlet.ServletConfig config;
    jakarta.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    jakarta.servlet.jsp.JspWriter _jspx_out = null;
    jakarta.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("  <!DOCTYPE html>\r\n");
      out.write("  <html lang=\"en\">\r\n");
      out.write("\r\n");
      out.write("  <head>\r\n");
      out.write("    <meta charset=\"utf-8\" />\r\n");
      out.write("    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\r\n");
      out.write("    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\" />\r\n");
      out.write("    <meta name=\"description\" content=\"\" />\r\n");
      out.write("    <meta name=\"author\" content=\"\" />\r\n");
      out.write("\r\n");
      out.write("    <title>PetDo - 관리자 페이지</title>\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom styles for this template-->\r\n");
      out.write("    <link href=\"../assets/css/sb-admin-2.min-copy.css\" rel=\"stylesheet\" />\r\n");
      out.write("    <link href=\"../assets/css/customRegistFAQ.css\" rel=\"stylesheet\" />\r\n");
      out.write("\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"../assets/css/summernote-lite.css\" />\r\n");
      out.write("  </head>\r\n");
      out.write("\r\n");
      out.write("  <body id=\"page-top\">\r\n");
      out.write("    <!-- Page Wrapper -->\r\n");
      out.write("    <div id=\"wrapper\">\r\n");
      out.write("      <!-- Content Wrapper -->\r\n");
      out.write("      <div id=\"content-wrapper\" class=\"d-flex flex-column\">\r\n");
      out.write("        <!-- Main Content -->\r\n");
      out.write("        <div id=\"content\">\r\n");
      out.write("          <!-- Topbar -->\r\n");
      out.write("          <nav class=\"navbar navbar-expand navbar-light bg-white topbar mb-4 static-top shadow\">\r\n");
      out.write("            <!-- Sidebar Toggle (Topbar) -->\r\n");
      out.write("            <button id=\"sidebarToggleTop\" class=\"btn btn-link d-md-none rounded-circle mr-3\">\r\n");
      out.write("              <i class=\"fa fa-bars\"></i>\r\n");
      out.write("            </button>\r\n");
      out.write("\r\n");
      out.write("            <!-- Topbar Navbar -->\r\n");
      out.write("            <ul class=\"navbar-nav ml-auto\">\r\n");
      out.write("              <!-- Nav Item -->\r\n");
      out.write("              <li>\r\n");
      out.write("                <a class=\"dropdown-item\" href=\"#\" data-toggle=\"modal\" data-target=\"#logoutModal\">\r\n");
      out.write("                  <i class=\"fas fa-sign-out-alt fa-sm fa-fw mr-2 text-gray-400\"></i>\r\n");
      out.write("                </a>\r\n");
      out.write("              </li>\r\n");
      out.write("            </ul>\r\n");
      out.write("          </nav>\r\n");
      out.write("          <!-- End of Topbar -->\r\n");
      out.write("\r\n");
      out.write("          <!-- Begin Page Content -->\r\n");
      out.write("          <div class=\"container-fluid\">\r\n");
      out.write("            <!-- Page Heading -->\r\n");
      out.write("\r\n");
      out.write("            <h1 class=\"h3 mb-2 text-gray-800\" style=\"text-align: center\"><b>FAQ 수정</b></h1>\r\n");
      out.write("\r\n");
      out.write("            <!-- 입력 폼 -->\r\n");
      out.write("            <div class=\"card shadow mb-4\" style=\"width: 75%; margin: auto; margin-top: 50pt\">\r\n");
      out.write("              <div class=\"card-header py-3\">\r\n");
      out.write("                <h6 class=\"m-0 font-weight-bold text-primary\">FAQ 게시글 수정</h6>\r\n");
      out.write("              </div>\r\n");
      out.write("              <form action=\"updateFaq\" id=\"insertNoticeFrm\" method=\"post\">\r\n");
      out.write("                <div class=\"card-body\" style=\"margin-left: 15px\">\r\n");
      out.write("                  <div class=\"inputTitle\">\r\n");
      out.write("                    <input type=\"hidden\" value=\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${faq.fNUM }", java.lang.String.class, (jakarta.servlet.jsp.PageContext)_jspx_page_context, null));
      out.write("\" name=\"fNUM\" />\r\n");
      out.write("                    <input type=\"text\" style=\"width: 70%\" placeholder=\"메인 제목\" name=\"fTITLE\" />\r\n");
      out.write("                  </div>\r\n");
      out.write("                  <hr />\r\n");
      out.write("                  <div>\r\n");
      out.write("                    상세 설명\r\n");
      out.write("                    <textarea id=\"summernote\" name=\"fCOMMENT\"></textarea>\r\n");
      out.write("                  </div>\r\n");
      out.write("\r\n");
      out.write("                </div>\r\n");
      out.write("                <hr />\r\n");
      out.write("            </div>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div class=\"recommItems\">\r\n");
      out.write("            <table class=\"recommItemsTbl\">\r\n");
      out.write("              <tr>\r\n");
      out.write("                <td></td>\r\n");
      out.write("              </tr>\r\n");
      out.write("            </table>\r\n");
      out.write("          </div>\r\n");
      out.write("\r\n");
      out.write("          <div id=\"registBtn\">\r\n");
      out.write("\r\n");
      out.write("            <button id=\"updateBtn\" class=\"btn btn-primary btn-icon-split\">\r\n");
      out.write("              <span class=\"icon text-white-50\"> <i class=\"fas fa-flag\"></i> </span>\r\n");
      out.write("              <span class=\"text\">등록</span>\r\n");
      out.write("            </button>\r\n");
      out.write("\r\n");
      out.write("            <a href=\"faq\" class=\"btn btn-secondary btn-icon-split\">\r\n");
      out.write("              <span class=\"icon text-white-50\"> <i class=\"fas fa-arrow-right\"></i> </span>\r\n");
      out.write("              <span class=\"text\">취소</span>\r\n");
      out.write("            </a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("      </form>\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- /.container-fluid -->\r\n");
      out.write("    </div>\r\n");
      out.write("    <!-- End of Main Content -->\r\n");
      out.write("\r\n");
      out.write("    <!-- Scroll to Top Button-->\r\n");
      out.write("    <a class=\"scroll-to-top rounded\" href=\"#page-top\">\r\n");
      out.write("      <i class=\"fas fa-angle-up\"></i>\r\n");
      out.write("    </a>\r\n");
      out.write("\r\n");
      out.write("    <!-- Logout Modal-->\r\n");
      out.write("    <div class=\"modal fade\" id=\"logoutModal\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\r\n");
      out.write("      aria-hidden=\"true\">\r\n");
      out.write("      <div class=\"modal-dialog\" role=\"document\">\r\n");
      out.write("        <div class=\"modal-content\">\r\n");
      out.write("          <div class=\"modal-header\">\r\n");
      out.write("            <h5 class=\"modal-title\" id=\"exampleModalLabel\">로그아웃</h5>\r\n");
      out.write("            <button class=\"close\" type=\"button\" data-dismiss=\"modal\" aria-label=\"Close\">\r\n");
      out.write("              <span aria-hidden=\"true\">×</span>\r\n");
      out.write("            </button>\r\n");
      out.write("          </div>\r\n");
      out.write("          <div class=\"modal-body\">로그아웃 하시겠습니까?</div>\r\n");
      out.write("          <div class=\"modal-footer\" style=\"height: 75px\">\r\n");
      out.write("            <button class=\"btn btn-secondary\" type=\"button\" style=\"border-radius: 10px\" data-dismiss=\"modal\">\r\n");
      out.write("              취소\r\n");
      out.write("            </button>\r\n");
      out.write("            <a class=\"btn btn-primary\" href=\"../logOut\" style=\"border-radius: 10px\">로그아웃</a>\r\n");
      out.write("          </div>\r\n");
      out.write("        </div>\r\n");
      out.write("      </div>\r\n");
      out.write("    </div>\r\n");
      out.write("\r\n");
      out.write("    <!-- Bootstrap core JavaScript-->\r\n");
      out.write("    <script src=\"../assets/vendor/jquery/jquery.min.js\"></script>\r\n");
      out.write("    <script src=\"../assets/vendor/bootstrap/js/bootstrap.bundle.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Core plugin JavaScript-->\r\n");
      out.write("    <script src=\"../assets/vendor/jquery-easing/jquery.easing.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <!-- Custom scripts for all pages-->\r\n");
      out.write("    <script src=\"../assets/js/sb-admin-2.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script src=\"../assets/js/summernote-lite.js\"></script>\r\n");
      out.write("    <script src=\"../assets/js/summernote-ko-KR.js\"></script>\r\n");
      out.write("\r\n");
      out.write("    <script type=\"text/javascript\">\r\n");
      out.write("      $(document).ready(function () {\r\n");
      out.write("        //여기 아래 부분\r\n");
      out.write("        $(\"#summernote\").summernote({\r\n");
      out.write("          height: 300, // 에디터 높이\r\n");
      out.write("          minHeight: null, // 최소 높이\r\n");
      out.write("          maxHeight: null, // 최대 높이\r\n");
      out.write("          focus: true, // 에디터 로딩후 포커스를 맞출지 여부\r\n");
      out.write("          lang: \"ko-KR\", // 한글 설정\r\n");
      out.write("          placeholder: \"최대 2048자까지 쓸 수 있습니다\", //placeholder 설정\r\n");
      out.write("        });\r\n");
      out.write("      });\r\n");
      out.write("    </script>\r\n");
      out.write("  </body>\r\n");
      out.write("\r\n");
      out.write("  </html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof jakarta.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
